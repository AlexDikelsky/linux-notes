================================
Notes on the UNIX find command
================================

Setup: {{{
    $ mkdir a b c
    $ touch a/in_a b/in_b c/in_c
}}}

Name {{{

    $ find . -iname a
    //Case insensitive search for file or dir called `a`

    $find . -iname "*a*"
    //Case insensitive search for files or dirs with `a` in the name
}}}

Filesystem Commands {{{

    Specify start files {{{2
    $ find a/ b/ -iname "in*"

    a/in_a
    b/in_b
    }}}2
}}}

Depend on filetype {{{

    $ find . -type f

    a/in_a
    b/in_b
    c/in_c
    //Finds files rather than directories
}}}

Time {{{

    $ find $HOME -mmin -30
    // contents of a file were changed less than 30 minutes ago
    $ find $HOME -cmin +30
    // permissions or was updated changed less than 30 minutes ago

    $ find $HOME -atime +365
    //accessed more than a year ago

    $ find . -newer ./a/in_a
    //file created after other specified file

    $ find . -not -newer ./a/in_a
    //file created before other specified file

    //Just `-time` isn't allowed
}}}

Size {{{

    $ find / -type f -size +1G
    //files more than 1 gigabyte
    // `k` for kilobytes or `M` for megabytes
}}}

Permissions {{{

    $ find . -perm 777
    //files with all permissions

    $ find . -executable
    //Only executable files

    $ find . -perm 755 -mtime 0
    //755 files that have also been created in the last day

    $ find . -type f \( -perm 755 -or -perm 000 \)
    //Files that are either `755` or `000`
    //#REMEMBER TO USE \( and \)#
}}}

Regex {{{

`[0-9]` or `[abcd]` or `[a-z]` or `*[^_]*`
    match what they should match

`.` 
    matches only literal `.`

`?`
    matches any single character

`*`
    matches any number of characters

`^ and $ automaticly are placed for all regex`

    $ find . -iname "?"
    //All 1 character filenames

    $ find . -iname "????"
    //All 4 character filenames

    $ touch A B C
    $ find . -name "[A-Z]"
    //All single letter uppercase filenames
}}}

Boolean Operators {{{

    AND {{{2    
        $ find . -mtime +7 -mtime -365
        x > 7 && x < 366           `Intersect`
        $ find . -mtime -7 -mtime +365
        x > 360 && x < 7           `Empty set`
       }}}2 
    OR {{{2
        $ find . -mtime +7 -or -mtime -365
        x > 7 || x < 366           `Addition`
        $ find . -mtime -7 -or -mtime +365
        x > 360 || x < 7           `Addition with no overlap`
    }}}2
    NOT {{{2
        $ find . -not -mtime +7 -mtime -365
        x < 7                      `Subtraction`
        $ find . -not \( -type f -or -mtime +7 \)
        No files. Also, nothing older than 7 days
    }}}2
}}}

Options like -exec {{{
    `print`
        On by default, prints the name of all files that 'qualify'
    `delete`
        Deletes all files or directories that qualivy
    `exec` {{{2
        //Executes `ls` in the current directory
        //Doesn't have the same behavior with `execdir`
        //See `Scary Stuff` for why to use `-execdir`
    `execdir` {{{2
        Uses absolute paths always, and doesn't allow `$PATH` to contain `.`
        #MAKE SURE TO HAVE \; AT THE END
        {} is the `character` that is replaced
        USE THIS OPTION#
    }}}
}}}

Scary stuff {{{
    
    -exec with . in PATH {{{2
        @
        #!/bin/bash 
        
        storepath=$PATH
        
        #Executes whatever "ls" is in your current directory
        PATH=.
        /bin/touch a b c d
        echo '#/bin/bash' > ls
        echo 'echo "This is executed"' >> ls
        /bin/chmod 777 ls
        /bin/find . -exec ls {} \;
        
        PATH=$storepath
        @
    }}}2
}}}
